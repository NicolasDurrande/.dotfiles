// Modified by Nicolas Durrande
default partial alphanumeric_keys
xkb_symbols "basic" {

  name[Group1]= "English (Workman, programmer international with dead keys)";

    key <TLDE> { [ quotedbl,     at,              nosign,               nosign         ] };
    key <AE01> { [ apostrophe,   1,               numbersign,           onesuperior    ] };
    key <AE02> { [ underscore,   2,               percent,              twosuperior    ] };
    key <AE03> { [ backslash,    3,               ampersand,            threesuperior  ] };
    key <AE04> { [ dollar,       4,               EuroSign,             sterling       ] };
    key <AE05> { [ less,         5,               greater,              nosign         ] };
    key <AE06> { [ minus,        6,               nosign,               nosign         ] };
    key <AE07> { [ plus,         7,               nosign,               nosign         ] };
    key <AE08> { [ slash,        8,               nosign,               nosign         ] };
    key <AE09> { [ asterisk,     9,               nosign,               multiply       ] };
    key <AE10> { [ equal,        0,               nosign,               nosign         ] };
    key <AE11> { [ parenleft,    bar,             nosign,               nosign         ] };
    key <AE12> { [ parenright,   nosign,          nosign,               nosign         ] };

    key <AD01> { [ q,            Q,               adiaeresis,           Adiaeresis     ] };
    key <AD02> { [ d,            D,               eth,                  ETH            ] };
    key <AD03> { [ r,            R,               registered,           registered     ] };
    key <AD04> { [ w,            W,               aring,                Aring          ] };
    key <AD05> { [ b,            B,               b,                    B              ] };
    key <AD06> { [ j,            J,               j,                    J              ] };
    key <AD07> { [ f,            F,               f,                    F              ] };
    key <AD08> { [ u,            U,               uacute,               Uacute         ] };
    key <AD09> { [ p,            P,               odiaeresis,           Odiaeresis     ] };
    key <AD10> { [ dead_grave,   dead_diaeresis,  dead_tilde,           nosign         ] };
    key <AD11> { [ bracketleft,  braceleft,       leftdoublequotemark,  guillemotleft  ] };
    key <AD12> { [ bracketright, braceright,      rightdoublequotemark, guillemotright ] };

    key <AC01> { [ a,            A,               ae,                   AE             ] };
    key <AC02> { [ s,            S,               ssharp,               section        ] };
    key <AC03> { [ h,            H,               h,                    H              ] };
    key <AC04> { [ t,            T,               thorn,                THORN          ] };
    key <AC05> { [ g,            G,               g,                    G              ] };
    key <AC06> { [ y,            Y,               udiaeresis,           Udiaeresis     ] };
    key <AC07> { [ n,            N,               ntilde,               Ntilde         ] };
    key <AC08> { [ e,            E,               eacute,               Eacute         ] };
    key <AC09> { [ o,            O,               oe,                   OE             ] };
    key <AC10> { [ i,            I,               iacute,               Iacute         ] };
    key <AC11> { [ dead_acute,   dead_circumflex, dead_cedilla,         nosign         ] };
    key <AC12> { [ colon,        semicolon,       degree,               nosign         ] };

    key <AB01> { [ z,            Z,               ae,                   AE             ] };
    key <AB02> { [ x,            X,               x,                    X              ] };
    key <AB03> { [ m,            M,               mu,                   mu             ] };
    key <AB04> { [ c,            C,               ccedilla,             Ccedilla       ] };
    key <AB05> { [ v,            V,               nosign,               nosign         ] };
    key <AB06> { [ k,            K,               oe,                   OE             ] };
    key <AB07> { [ l,            L,               oslash,               Ooblique       ] };
    key <AB08> { [ comma,        semicolon,       nosign,               nosign         ] };
    key <AB09> { [ period,       colon,           nosign,               nosign         ] };
    key <AB10> { [ question,     exclam,          questiondown,         exclamdown     ] };

    key <CAPS> { [ BackSpace,    Escape,          BackSpace,            BackSpace      ] };
    key <LSGT> { [ backslash,    bar,             backslash,            bar            ] };

    include "level3(ralt_switch)"
};


//
// // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// // │ ³ ¸ │ 1 ̨  │ 2 É │ 3 ˘ │ 4 — │ 5 – │ 6 ‑ │ 7 È │ 8 ™ │ 9 Ç │ 0 À │ ° ≠ │ + ±┃ ⌫ Retour┃
// // │ ² ¹ │ & ˇ │ é ~ │ " # │ ' { │ ( [ │ - | │ è ` │ _ \ │ ç ^ │ à @ │ ) ] │ = } ┃  arrière┃
// // ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// // ┃       ┃ A Æ │ Z Â │ E ¢ │ R Ê │ T Þ │ Y Ÿ │ U Û │ I Î │ O Œ │ P Ô │ ¨ ˚ │ £ Ø ┃Entrée ┃
// // ┃Tab ↹  ┃ a æ │ z â │ e € │ r ê │ t þ │ y ÿ │ u û │ i î │ o œ │ p ô │ ^ ~ │ $ ø ┃   ⏎   ┃
// // ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// // ┃        ┃ Q Ä │ S „ │ D Ë │ F ‚ │ G ¥ │ H Ð │ J Ü │ K Ï │ L Ŀ │ M Ö │ % Ù │ µ ̄ ┃      ┃
// // ┃Maj ⇬   ┃ q ä │ s ß │ d ë │ f ‘ │ g ’ │ h ð │ j ü │ k ï │ l ŀ │ m ö │ ù ' │ * ` ┃      ┃
// // ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// // ┃       ┃ > ≥ │ W “ │ X ” │ C ® │ V ← │ B ↑ │ N → │ ? … │ . . │ / ∕ │ § − ┃             ┃
// // ┃Shift ⇧┃ < ≤ │ w « │ x » │ c © │ v ⍽ │ b ↓ │ n ¬ │ , ¿ │ ; × │ : ÷ │ ! ¡ ┃Shift ⇧      ┃
// // ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// // ┃       ┃       ┃       ┃ ␣         Espace fine insécable ⍽ ┃       ┃       ┃       ┃
// // ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Espace       Espace insécable ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
// partial alphanumeric_keys
// xkb_symbols "oss" {
//
//     include "latin"
//     include "level3(ralt_switch)"
//     include "nbsp(level4n)"
//     include "keypad(oss)"
//
//     name[Group1]="French (alternative)";
//
//     // First row
//     key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,          dead_cedilla ] }; // ² ³ ¹ ¸
//     key <AE01>	{ [        ampersand,                1,           dead_caron,           dead_ogonek ] }; // & 1 ˇ ̨
//     key <AE02>	{ [           eacute,                2,           asciitilde,                Eacute ] }; // é 2 ~ É
//     key <AE03>	{ [         quotedbl,                3,           numbersign,            dead_breve ] }; // " 3 # ˘
//     key <AE04>	{ [       apostrophe,                4,            braceleft,             0x1002014 ] }; // ' 4 { — (tiret cadratin)
//     key <AE05>	{ [        parenleft,                5,          bracketleft,             0x1002013 ] }; // ( 5 [ – (tiret demi-cadratin)
//     key <AE06>	{ [            minus,                6,                  bar,             0x1002011 ] }; // - 6 | ‑ (tiret insécable)
//     key <AE07>	{ [           egrave,                7,                grave,                Egrave ] }; // è 7 ` È
//     key <AE08>	{ [       underscore,                8,            backslash,             trademark ] }; // _ 8 \ ™
//     key <AE09>	{ [         ccedilla,                9,          asciicircum,              Ccedilla ] }; // ç 9 ^ Ç
//     key <AE10>	{ [           agrave,                0,                   at,                Agrave ] }; // à 0 @ À
//     key <AE11>	{ [       parenright,           degree,         bracketright,              notequal ] }; // ) ° ] ≠
//     key <AE12>	{ [            equal,             plus,           braceright,             plusminus ] }; // = + } ±
//
//     // Second row
//     key <AD01>	{ [                a,                A,                   ae,                    AE ] }; // a A æ Æ
//     key <AD02>	{ [                z,                Z,          acircumflex,           Acircumflex ] }; // z Z â Â
//     key <AD03>	{ [                e,                E,             EuroSign,                  cent ] }; // e E € ¢
//     key <AD04>	{ [                r,                R,          ecircumflex,           Ecircumflex ] }; // r R ê Ê
//     key <AD05>	{ [                t,                T,                thorn,                 THORN ] }; // t T þ Þ
//     key <AD06>	{ [                y,                Y,           ydiaeresis,            Ydiaeresis ] }; // y Y ÿ Ÿ
//     key <AD07>	{ [                u,                U,          ucircumflex,           Ucircumflex ] }; // u U û Û
//     key <AD08>	{ [                i,                I,          icircumflex,           Icircumflex ] }; // i I î Î
//     key <AD09>	{ [                o,                O,                   oe,                    OE ] }; // o O œ Œ
//     key <AD10>	{ [                p,                P,          ocircumflex,           Ocircumflex ] }; // p P ô Ô
//     key <AD11>	{ [  dead_circumflex,   dead_diaeresis,           dead_tilde,        dead_abovering ] }; // ^ ̈ ̃ ˚
//     key <AD12>	{ [           dollar,         sterling,               oslash,              Ooblique ] }; // $ £ ø Ø
//
//     // Third row
//     key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä
//     key <AC02>	{ [                s,                S,               ssharp,    doublelowquotemark ] }; // s S ß „
//     key <AC03>	{ [                d,                D,           ediaeresis,            Ediaeresis ] }; // d D ë Ë
//     key <AC04>	{ [                f,                F,  leftsinglequotemark,    singlelowquotemark ] }; // f F ‘ ‚
//     key <AC05>	{ [                g,                G, rightsinglequotemark,                   yen ] }; // g G ’ ¥
//     key <AC06>	{ [                h,                H,                  eth,                   ETH ] }; // h H ð Ð
//     key <AC07>	{ [                j,                J,           udiaeresis,            Udiaeresis ] }; // j J ü Ü
//     key <AC08>	{ [                k,                K,           idiaeresis,            Idiaeresis ] }; // k K ï Ï
//     key <AC09>	{ [                l,                L,            0x1000140,             0x100013F ] }; // l L ŀ Ŀ
//     key <AC10>	{ [                m,                M,           odiaeresis,            Odiaeresis ] }; // m M ö Ö
//     key <AC11>	{ [           ugrave,          percent,           dead_acute,                Ugrave ] }; // ù % ' Ù
//     key <BKSL>	{ [         asterisk,               mu,           dead_grave,           dead_macron ] }; // * µ ` ̄
//
//     // Fourth row
//     key <LSGT>  { [             less,          greater,        lessthanequal,      greaterthanequal ] }; // < > ≤ ≥
//     key <AB01>  { [                w,                W,        guillemotleft,   leftdoublequotemark ] }; // w W « “
//     key <AB02>  { [                x,                X,       guillemotright,  rightdoublequotemark ] }; // x X » ”
//     key <AB03>  { [                c,                C,            copyright,            registered ] }; // c C © ®
//     key <AB04>  { [                v,                V,            0x100202F,             leftarrow ] }; // v V ⍽ ← (espace fine // insécable)//
//     key <AB05>//   { [                b,                B,            downarrow,               uparrow ] }; // b B ↓ ↑//
//     key <AB06>//   { [                n,                N,              notsign,            rightarrow ] }; // n N ¬ →//
//     key <AB07>//   { [            comma,         question,         questiondown,             0x1002026 ] }; // , ? ¿ …//
//     key <AB08>//   { [        semicolon,           period,             multiply,             0x10022C5 ] }; // ; . × ⋅//
//     key <AB09>//   { [            colon,            slash,             division,             0x1002215 ] }; // : / ÷ ∕//
//     key <AB10>//   { [           exclam,          section,           exclamdown,             0x1002212 ] }; // ! § ¡ −//
// };//
//
// partial alphanumeric_keys
// xkb_symbols "oss_latin9" {
//
//     // Restricts the fr(oss) layout to latin9 symbols
//
//     include "fr(oss)"
//     include "keypad(oss_latin9)"
//
//     name[Group1]="French (alternative, Latin-9 only)";
//
//     // First row
//     key <AE01>	{ [        ampersand,                1,           dead_caron,          dead_cedilla ] }; // & 1 ˇ ¸
//     key <AE03>	{ [         quotedbl,                3,           numbersign,            dead_tilde ] }; // " 3 # ~
//     key <AE04>	{ [       apostrophe,                4,            braceleft,            underscore ] }; // ' 4 { _
//     key <AE05>	{ [        parenleft,                5,          bracketleft,                 minus ] }; // ( 5 [ -
//     key <AE06>	{ [            minus,                6,                  bar,                 minus ] }; // - 6 | -
//     key <AE08>	{ [       underscore,                8,            backslash,             backslash ] }; // _ 8 \ \
//     key <AE11>	{ [       parenright,           degree,         bracketright,                 equal ] }; // ) ° ] =
//
//     // Third row
//     key <AC02>	{ [                s,                S,               ssharp,         guillemotleft ] }; // s S ß «
//     key <AC04>	{ [                f,                F,           apostrophe,            apostrophe ] }; // f F ' '
//     key <AC05>	{ [                g,                G,           apostrophe,                   yen ] }; // g G ' ¥
//     key <AC09>	{ [                l,                L,       periodcentered,        periodcentered ] }; // l L · ·
//     key <BKSL>	{ [         asterisk,               mu,           dead_grave,       dead_circumflex ] }; // * µ ` ^
//
//     // Fourth row
//     key <LSGT>  { [             less,          greater,                 less,               greater ] }; // < > < >
//     key <AB01>  { [                w,                W,        guillemotleft,         guillemotleft ] }; // w W « «
//     key <AB02>  { [                x,                X,       guillemotright,        guillemotright ] }; // x X » »
//     key <AB04>  { [                v,                V,         nobreakspace,                  less ] }; // v V ⍽ < (espace insécable)
//     key <AB05>  { [                b,                B,                minus,           asciicircum ] }; // b B - ^
//     key <AB06>  { [                n,                N,              notsign,               greater ] }; // n N ¬ >
//     key <AB07>  { [            comma,         question,         questiondown,                period ] }; // , ? ¿ .
//     key <AB08>  { [        semicolon,           period,             multiply,        periodcentered ] }; // ; . × ·
//     key <AB09>  { [            colon,            slash,             division,                 slash ] }; // : / ÷ /
//     key <AB10>  { [           exclam,          section,           exclamdown,                 minus ] }; // ! § ¡ -
// };
//
// partial alphanumeric_keys
// xkb_symbols "oss_Sundeadkeys" {
//
//     // Modifies the basic fr(oss) layout to use the Sun dead keys
//
//     include "fr(oss)"
//
//     key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,          dead_cedilla ] }; // ¹ ² ³ ¸
//
//     key <AD11>	{ [  dead_circumflex,   dead_diaeresis,           dead_tilde,        dead_abovering ] }; // ^ ̈ ̃ ˚
//
//     key <AC11>	{ [           ugrave,          percent,           dead_acute,                Ugrave ] }; // ù % ' Ù
//     key <BKSL>	{ [         asterisk,               mu,           dead_grave,           dead_macron ] }; // * µ ` ̄
// };
//
// partial alphanumeric_keys
// xkb_symbols "oss_sundeadkeys" {
//
//     include "fr(oss_Sundeadkeys)"
//
//     name[Group1]="French (alternative, Sun dead keys)";
// };
//
// partial alphanumeric_keys
// xkb_symbols "oss_nodeadkeys" {
//
//     // Modifies the basic fr(oss) layout to eliminate all dead keys
//
//     include "fr(oss)"
//
//     name[Group1]="French (alternative, eliminate dead keys)";
//
//     key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,               cedilla ] }; // ² ³ ¹ ¸
//     key <AE01>	{ [        ampersand,                1,                caron,                ogonek ] }; // & 1 ˇ ̨
//     key <AE03>	{ [         quotedbl,                3,           numbersign,                 breve ] }; // " 3 # ˘
//
//     key <AD11>	{ [      asciicircum,        diaeresis,           asciitilde,                 Aring ] }; // ^ ̈ ̃ Å
//     key <AC11>	{ [           ugrave,          percent,                acute,                Ugrave ] }; // ù % ' Ù
//     key <BKSL>	{ [         asterisk,               mu,                grave,                macron ] }; // * µ ` ̄
// };
//
//
// // Historic Linux French keyboard layout (fr-latin9)
// // Copyright (c) 199x, 2002 Rene Cougnenc (original work)
// //                          Guylhem Aznar <clavier @ externe.net> (maintainer)
// //                          Nicolas Mailhot <Nicolas.Mailhot @ laposte.net>
// //                              (XFree86 submission)
// //
// // This layout has long been distributed and refined outside official channels.
// // To this day it remains more feature-rich and popular than the 'fr' layout.
// //
// // This layout is derived from an original version by Guylhem Aznar.
// // The original version is always available from:
// // http://en.tldp.org/HOWTO/Francophones-HOWTO.html
// // and is distributed under a GPL license.
// //
// // The author has given permission for this derived version to be distributed
// // under the standard XFree86 license. He would like all changes to this
// // version to be sent to him at <clavier @ externe.net>, so he can sync
// // the identically named linux console map (kbd, linux-console) and his
// // out-of-tree GPL version.
// //
// // Now follows the keyboard design description in French.
// // (If you can't read it you probably have no business changing this file anyway:)
// //
// // Les accents circonflexes des principales voyelles sont obtenus avec
// // la touche Alt_Gr, les trémas sont obtenus par Alt_Gr + Shift.
// //
// //  ____                                     _________ _____________ _______
// // | S A| S = Shift,  A = AltGr + Shift     | Imprime | Arrêt défil | Pause |
// // | s a| s = normal, a = AltGr             |  Exec   |             | Halte |
// //  ¯¯¯¯                                     ¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯
// //  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
// // | œ "| 1 ·| 2 É| 3 ,| 4 '| 5 "| 6 || 7 È| 8 ¯| 9 Ç| 0 À| ° ÿ| + °| <--   |
// // | Œ "| & '| é ~| " #| ' {| ( [| - || è `| _ \| ç ^| à @| ) ]| = }|       |
// //  ========================================================================
// // | |<-  | A ä| Z Å| E ¢| R Ç| T Þ| Y Ý| U ü| I ï| O ö| P '| " `| $ ë|   , |
// // |  ->| | a â| z å| e €| r ç| t þ| y ý| u û| i î| o ô| p ¶| ^ ~| £ ê| <-' |
// //  ===================================================================¬    |
// // |       | Q Ä| S Ø| D Ë| F ª| G Æ| H Ð| J Ü| K Ï| L Ö| M º| % Ù| µ ¥|    |
// // | MAJ   | q Â| s ø| d Ê| f ±| g æ| h ð| j Û| k Î| l Ô| m ¹| ù ²| * ³|    |
// //  ========================================================================
// // | ^   | >  | W  | X  | C  | V  | B  | N  | ?  | .  | /  | §  |     ^     |
// // | |   | < || w «| x »| c ©| v ®| b ß| n ¬| , ¿| ; ×| : ÷| ! ¡|     |     |
// //  ========================================================================
// // |      |      |      |                       |       |      |     |      |
// // | Ctrl | Super| Alt  | Space    Nobreakspace | AltGr | Super|Menu | Ctrl |
// //  ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯ ¯¯¯¯¯¯
// //
//
